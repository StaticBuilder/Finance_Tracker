i want to make mutiple charts which receive 2 values as weve done here 
//PieChartComponentimport React from 'react';
import { PieChart, Pie, Tooltip, ResponsiveContainer, Cell, Legend } from 'recharts';

// Define your colors
const COLORS = ['#10B981', '#EF4444']; // Green for Income, Red for Spend

function PieChartComponent({ totalIncome, totalSpend }) {
  // Data structure for the pie chart
  const data = [
    { name: 'Income', value: totalIncome },
    { name: 'Spend', value: totalSpend },
  ];

  // Custom Tooltip
  const CustomTooltip = ({ active, payload }) => {
    if (active && payload && payload.length) {
      const { name, value } = payload[0];
      const valueColorClass = name === 'Income' ? 'text-blue-500' : 'text-red-500'; // Blue for Income, Red for Spend
  
      return (
        <div className="custom-tooltip p-2 bg-white border rounded shadow-lg">
          <p className="text-sm text-gray-700"><strong>{name}</strong></p>
          <p className={`text-sm ${valueColorClass}`}>Ksh.{value}</p>
        </div>
      );
    }
    return null;
  };
  

  return (
    <div className="border rounded-2xl p-5">
      <h2 className="font-bold text-lg">Pie Chart: Income vs Spend</h2>
      <ResponsiveContainer width={"100%"} height={400}>
        <PieChart>
          <Pie
            dataKey="value"
            data={data}
            cx="50%"
            cy="50%"
            outerRadius={120}
            innerRadius={50}
            fill="#8884d8"
            label={({ name, value }) => `${name}: Ksh.${value}`} // Add labels to slices
          >
            {data.map((entry, index) => (
              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
            ))}
          </Pie>
          <Tooltip content={<CustomTooltip />} />
          <Legend />
        </PieChart>
      </ResponsiveContainer>
    </div>
  );
}

export default PieChartComponent;

//LineChart
import React from "react";
import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend } from "recharts";

function LineChartComponent({ totalIncome, totalSpend }) {
  // Data structure for the chart
  const data = [
    { name: "Total", totalIncome, totalSpend },
  ];

  return (
    <div className="border rounded-2xl p-5">
      <h2 className="font-bold text-lg">Line Chart: Income vs Spend</h2>
      <ResponsiveContainer width={"80%"} height={300}>
        <LineChart data={data}>
          <XAxis dataKey="name" />
          <YAxis />
          <Tooltip />
          <Legend />
          {/* Line for totalIncome */}
          <Line type="monotone" dataKey="totalIncome" stroke="#10B981" name="Income" strokeWidth={2} />
          {/* Line for totalSpend */}
          <Line type="monotone" dataKey="totalSpend" stroke="#EF4444" name="Spend" strokeWidth={2} />
        </LineChart>
      </ResponsiveContainer>
    </div>
  );
}

export default LineChartComponent;


//BarChartComponent
import React from "react";
import {
  Bar,
  BarChart,
  Legend,
  ResponsiveContainer,
  Tooltip,
  XAxis,
  YAxis,
} from "recharts";

function BarChartComponent({ budgetList }) {

  const CustomTooltip = ({ active, payload }) => {
    if (active && payload && payload.length) {
      const { name, totalSpend, amount } = payload[0].payload;
      return (
        <div className="custom-tooltip p-2 bg-white border rounded shadow-lg">
          <p className="text-sm text-gray-700"><strong>{name}</strong></p>
          <p className="text-sm text-blue-500">Budget: Ksh.{amount}</p>
          <p className="text-sm text-red-500">Spent: Ksh.{totalSpend}</p>
        </div>
      );
    }
    return null;
  };

  return (
    <div className="border rounded-2xl p-5">
      <h2 className="font-bold text-lg">Bar Chart: Spend To Budget</h2>
      <ResponsiveContainer width={"80%"} height={300}>
        <BarChart
          data={budgetList}
          margin={{
            top: 7,
          }}
        >
          <XAxis dataKey="name" />
          <YAxis />
          <Tooltip content={<CustomTooltip />}/>
          <Legend />
          <Bar dataKey="totalSpend" stackId="a" fill="#EF4444" />  {/* Red color */}
          <Bar dataKey="amount" stackId="b" fill="#3B82F6" />      {/* Blue color */}
        </BarChart>
      </ResponsiveContainer>
    </div>
  );
}

export default BarChartComponent;




expectedSavings vs actualSavings

totalIncome vs actualSavings

totalIncome vs totalBudget

but is there a way to use one Chart code for each type of chart such that when I pass the values as props it detects and changes the tooltips and all data inside the gragh