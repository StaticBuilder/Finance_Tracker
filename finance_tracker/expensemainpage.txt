"use client"; // Add this directive at the top

import { useSearchParams } from 'next/navigation';
import { db } from '../../../../../utils/dbConfig';
import { Budgets, Expenses } from '../../../../../utils/schema';
import { desc, eq } from 'drizzle-orm';
import React, { useEffect, useState } from 'react';
import ExpenseListTable from './_components/ExpenseListTable';
import { useUser } from '@clerk/nextjs';

function ExpensesScreen() {
  const [expensesList, setExpensesList] = useState([]);
  const { user } = useUser();

  // Use `useSearchParams` to access dynamic route parameters
  const searchParams = useSearchParams();
  const id = searchParams.get('id'); // Get 'id' from query parameters

  // Ensure `id` is available before calling `getAllExpenses`
  useEffect(() => {
    if (user && id) {
      getAllExpenses();
    }
  }, [user, id]); // Dependency array includes `id` as well

  const getAllExpenses = async () => {
    try {
      const result = await db
        .select({
          id: Expenses.id,
          name: Expenses.name,
          amount: Expenses.amount,
          createdAt: Expenses.createdAt,
        })
        .from(Budgets)
        .rightJoin(Expenses, eq(Budgets.id, Expenses.budgetId))
        .where(eq(Budgets.createdBy, user?.primaryEmailAddress.emailAddress))
        .orderBy(desc(Expenses.id));

      setExpensesList(result);
    } catch (error) {
      console.error("Error fetching expenses:", error);
    }
  };

  return (
    <div className="p-10">
      <h2 className="font-bold text-3xl">My Expenses</h2>
      <ExpenseListTable
        refreshData={getAllExpenses} // Refreshing data after an expense is deleted
        expensesList={expensesList}
      />
    </div>
  );
}

export default ExpensesScreen;


// import { useSearchParams } from 'next/navigation';
// import { db } from '../../../../../utils/dbConfig';
// import { Budgets, Expenses } from '../../../../../utils/schema';
// import { desc, eq } from 'drizzle-orm';
// import React, { useEffect, useState } from 'react';
// import ExpenseListTable from './_components/ExpenseListTable';
// import { useUser } from '@clerk/nextjs';

// function ExpensesScreen() {
//   const [expensesList, setExpensesList] = useState([]);
//   const { user } = useUser();

//   // Use `useSearchParams` to access dynamic route parameters
//   const searchParams = useSearchParams();
//   const id = searchParams.get('id'); // Get 'id' from query parameters

//   // Ensure `id` is available before calling `getAllExpenses`
//   useEffect(() => {
//     if (user && id) {
//       getAllExpenses();
//     }
//   }, [user, id]); // Dependency array includes `id` as well

//   const getAllExpenses = async () => {
//     try {
//       const result = await db
//         .select({
//           id: Expenses.id,
//           name: Expenses.name,
//           amount: Expenses.amount,
//           createdAt: Expenses.createdAt,
//         })
//         .from(Budgets)
//         .rightJoin(Expenses, eq(Budgets.id, Expenses.budgetId))
//         .where(eq(Budgets.createdBy, user?.primaryEmailAddress.emailAddress))
//         .orderBy(desc(Expenses.id));

//       setExpensesList(result);
//     } catch (error) {
//       console.error("Error fetching expenses:", error);
//     }
//   };

//   return (
//     <div className="p-10">
//       <h2 className="font-bold text-3xl">My Expenses</h2>
//       <ExpenseListTable
//         refreshData={getAllExpenses} // Refreshing data after an expense is deleted
//         expensesList={expensesList}
//       />
//     </div>
//   );
// }

// export default ExpensesScreen;


// import { useRouter } from 'next/router';
// import { db } from '../../../../../utils/dbConfig';
// import { Budgets, Expenses } from '../../../../../utils/schema';
// import { desc, eq } from 'drizzle-orm';
// import React, { useEffect, useState } from 'react';
// import ExpenseListTable from './_components/ExpenseListTable';
// import { useUser } from '@clerk/nextjs';

// function ExpensesScreen() {
//   const [expensesList, setExpensesList] = useState([]);
//   const { user } = useUser();
  
//   // Use `useRouter` to access dynamic route parameters
//   const router = useRouter();
//   const { id } = router.query; // This gives you the dynamic parameter
  
//   // Ensure `id` is available before calling `getAllExpenses`
//   useEffect(() => {
//     if (user && id) {
//       getAllExpenses();
//     }
//   }, [user, id]); // Dependency array includes `id` as well

//   const getAllExpenses = async () => {
//     try {
//       const result = await db
//         .select({
//           id: Expenses.id,
//           name: Expenses.name,
//           amount: Expenses.amount,
//           createdAt: Expenses.createdAt,
//         })
//         .from(Budgets)
//         .rightJoin(Expenses, eq(Budgets.id, Expenses.budgetId))
//         .where(eq(Budgets.createdBy, user?.primaryEmailAddress.emailAddress))
//         .orderBy(desc(Expenses.id));

//       setExpensesList(result);
//     } catch (error) {
//       console.error("Error fetching expenses:", error);
//     }
//   };

//   return (
//     <div className="p-10">
//       <h2 className="font-bold text-3xl">My Expenses</h2>
//       <ExpenseListTable
//         refreshData={getAllExpenses} // Refreshing data after an expense is deleted
//         expensesList={expensesList}
//       />
//     </div>
//   );
// }

// export default ExpensesScreen;

// "use client";
// import { db } from '../../../../../utils/dbConfig';
// import { Budgets, Expenses } from '../../../../../utils/schema';
// import { desc, eq } from 'drizzle-orm';
// import React, { useEffect, useState } from 'react';
// import ExpenseListTable from './_components/ExpenseListTable';
// import { useUser } from '@clerk/nextjs';

// function ExpensesScreen() {
//   const [expensesList, setExpensesList] = useState([]);
//   const { user } = useUser();

//   useEffect(() => {
//     if (user) {
//       getAllExpenses();
//     }
//   }, [user]);

//   const getAllExpenses = async () => {
//     try {
//       const result = await db
//         .select({
//           id: Expenses.id,
//           name: Expenses.name,
//           amount: Expenses.amount,
//           createdAt: Expenses.createdAt,
//         })
//         .from(Budgets)
//         .rightJoin(Expenses, eq(Budgets.id, Expenses.budgetId))
//         .where(eq(Budgets.createdBy, user?.primaryEmailAddress.emailAddress))
//         .orderBy(desc(Expenses.id));

//       setExpensesList(result);
//     } catch (error) {
//       console.error("Error fetching expenses:", error);
//     }
//   };

//   return (
//     <div className="p-10">
//       <h2 className="font-bold text-3xl">My Expenses</h2>
//       <ExpenseListTable
//         refreshData={getAllExpenses} // Refreshing data after an expense is deleted
//         expensesList={expensesList}
//       />
//     </div>
//   );
// }

// export default ExpensesScreen;

// // "use client";
// // import { db } from '../../../../../utils/dbConfig';
// // import { Budgets, Expenses } from '../../../../../utils/schema';
// // import { desc, eq } from 'drizzle-orm';
// // import React, { useEffect, useState } from 'react';
// // import ExpenseListTable from './_components/ExpenseListTable';
// // import { useUser } from '@clerk/nextjs';

// // function ExpensesScreen() {
// //   const [expensesList, setExpensesList] = useState([]);
// //   const [loading, setLoading] = useState(true);
// //   const [error, setError] = useState(null);
// //   const { user } = useUser();

// //   useEffect(() => {
// //     if (user) {
// //       getAllExpenses();
// //     }
// //   }, [user]);

// //   const getAllExpenses = async () => {
// //     setLoading(true);
// //     setError(null);
// //     try {
// //       const result = await db
// //         .select({
// //           id: Expenses.id,
// //           name: Expenses.name,
// //           amount: Expenses.amount,
// //           createdAt: Expenses.createdAt,
// //         })
// //         .from(Budgets)
// //         .rightJoin(Expenses, eq(Budgets.id, Expenses.budgetId))
// //         .where(eq(Budgets.createdBy, user?.primaryEmailAddress.emailAddress))
// //         .orderBy(desc(Expenses.id));

// //       setExpensesList(result);
// //     } catch (err) {
// //       console.error("Error fetching expenses:", err);
// //       setError("There was an error fetching your expenses.");
// //     } finally {
// //       setLoading(false);
// //     }
// //   };

// //   return (
// //     <div className="p-10">
// //       <h2 className="font-bold text-3xl">My Expenses</h2>

// //       {loading && <p>Loading expenses...</p>}
// //       {error && <p className="text-red-500">{error}</p>}
// //       {expensesList.length === 0 && !loading && !error && <p>No expenses found.</p>}

// //       <ExpenseListTable refreshData={() => getAllExpenses()} expensesList={expensesList} />
// //     </div>
// //   );
// // }

// // export default ExpensesScreen;
